<html t:type="layout" title="${cryptoNetwork.cryptocurrency.fullName} Gambling"
      xmlns:t="http://tapestry.apache.org/schema/tapestry_5_4.xsd">
	<head>
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
		<script>
			$(document).ready(function(){
				window.setInterval(function(){$(".updateData").click()}, 11000);
				window.setInterval(function(){
					var possible = "0123456789ABCDEF??????????";
					$(".tbd").html(
						"0000000000000"
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
					)
					
				}, 0.2*1000);
				window.setInterval(function(){
					var possible = "0123456789abcdef??????????";
					$(".tbd_eth").html(
						"0x"
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
						+possible.charAt(Math.floor(Math.random() * possible.length))
					)
					
				}, 0.2*1000);
			});
		</script>
		<link rel="stylesheet" type="text/css" href="${asset:context:/css/main.css}"/>
		<link rel="stylesheet" type="text/css" href="${asset:context:/css}/custom/${cryptoNetwork.cryptocurrency.code}.css"/>
	</head>
	
	
	<t:zone t:id="headerZone">
		<div id="blockchainData">
			<!--  <p>Bock Height: <a href="${cryptoNetwork.explorerLink}" target="_blank"><strong>${currentBockHeight}</strong></a> Bock Hash: <a href="${currentBockHashExplorerLink}" target="_blank"><strong>${currentBockHash}</strong></a></p>-->
			<p>Bock Height: <a href="${cryptoNetwork.explorerLink}" target="_blank"><strong>${currentBockHeight}</strong></a>&nbsp;&nbsp;&nbsp; <strong>${price}</strong>&euro; / ${cryptoNetwork.cryptocurrency.code}&nbsp;&nbsp;&nbsp; ${time}</p>
		</div>
	 </t:zone>
	
	
	<header>
	        <div class="logoP">
		        <p><img src="${asset:context:images/logos}/${cryptoNetwork.cryptocurrency.code}.png" alt="${cryptoNetwork.cryptocurrency.fullName}" title="${cryptoNetwork.cryptocurrency.fullName}"/></p>
	            <p>${cryptoNetwork.networkName}</p>
	        </div>
    </header>
    

	 
	<t:zone t:id="dataZone">
    
    <div class="container">
		
		<div id="pots">
			<div class="container">
			    <div class="row">
			        <div class="span12">
			            <t:alerts/>
			        </div>
			    </div>
			</div>
			<t:if test="showDeposits">
				<div id="deposits">
					<h3>My deposits:</h3>
					<p t:type="Loop" t:source="myDeposits" t:value="deposit">
						<t:DepositComponent participant="deposit" />
					</p>
				</div>
			</t:if>
			<div id="currentPot">
				<t:PotComponent pot="prop:currentPot" />
				<t:actionlink t:id="joinPot">Join Pot</t:actionlink>
			</div>
			<t:if test="showPaymentForm">
				<div id="paymentDetails">
					<div id="qrcode">
						<img src="${currentReceivingAddressLink}" alt="qrcode"></img>
					</div> 
					
					<t:form t:id="addPayoutAddress" class="${cryptoNetwork.cryptoCurrency}">
						<p class="payDescription">Send <strong>${currentPot.expectedBettingAmount}</strong> ${cryptoNetwork.cryptoCurrency.smallestDenomination} to <strong><a href="${linkToDepositAddress}" target="_blank">${depositAddress}</a></strong> to participate in the current pot.</p>
						<t:if test="!ethereum">
							<t:textfield t:id="pseudonym" class="input-block-level" placeholder="pseudonym (optional)"/>
							<!-- <t:textfield t:id="payoutAddress" class="input-block-level" placeholder="${cryptoNetwork.cryptocurrency.fullName} payout address (optional)"/> -->
						</t:if>
						<t:if test="ethereum">
							<p>Smart contract ABI:</p>
							<t:textarea t:id="smartContractAbi" class="input-block-level" placeholder="Smart contract ABI (Application Binary Interface)"/>
						</t:if>
						<t:submit class="btn btn-large btn-primary" value="Close"/>
					</t:form>
					
				</div>
			</t:if>
				
			
				<t:if test="showClosedPots">
					<h3 class="centred">Closed Pots</h3>
				</t:if>
				<div id="closedPots">
					<div t:type="Loop" t:source="closedPots" t:value="closedPot">
						<t:PotComponent pot="prop:closedPot" />
					</div>
				</div>
			
		<t:eventlink class="updateData" t:id="updatelink" event="updateDataZone" zone="dataZone">Update Data Zone</t:eventlink>
		<t:eventlink class="updateData" t:id="updatelink2" event="updateHeaderZone" zone="headerZone">Update Header Zone</t:eventlink>
    	</div>
    </div>
    </t:zone>
</html>